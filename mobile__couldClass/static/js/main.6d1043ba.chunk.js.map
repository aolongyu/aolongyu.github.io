{"version":3,"sources":["utils/eventEmitter.js","utils/wait.js","components/Picker/index.jsx","components/InputBox/index.jsx","components/Toast/toast.jsx","components/Toast/index.jsx","assets/main/bannerImg.png","utils/validation.js","mock/data.js","utils/scrollToAnchor.js","pages/main/index.jsx","utils/getUrlToken.js","pages/success/index.jsx","index.js"],"names":["this","listeners","type","cb","mode","cbs","push","remove","Array","isArray","args","i","length","filter","eMap","wait","time","Promise","resolve","setTimeout","Picker","props","pickerData","fieldValue","handleSelect","e","item","useEffect","document","getElementsByClassName","style","transform","className","onClick","stopPropagation","preventDefault","map","id","value","InputBox","React","forwardRef","ref","fieldId","required","label","placeHolder","placeHolder2","maxLength","picker","hasButton","use","useState","showPicker","setShowPicker","setFieldValue","secondFieldValue","setSecondFieldValue","error","setError","btnText","setBtnText","validationPhone","setValidationPhone","newPlaceHolder","setNewPlaceHolder","eventEmitter","on","val","handlePickerOpenAndClose","handleBlur","rootHtml","documentElement","overflow","a","other","secondInputNode","focus","handleTest","reg","test","console","log","msg","handleInputChange","second","target","flag","emit","handleClickValidationBtn","timer","setInterval","clearInterval","useImperativeHandle","changeErrorMsg","newVal","data","details","value2","value1","readOnly","placeholder","onChange","onFocus","onBlur","Toast","show","duration","span","createElement","body","appendChild","clearTimeout","removeChild","ReactDOM","render","Notice","validation","errorMsg","forEach","baseInputCheck","indexOf","remindBaseData","createRef","remindUserInfoData","remindUserContactData","scrollToAnchor","anchorName","anchorElement","getElementById","scrollIntoView","block","behavior","Main","checked","setChecked","src","bannerImg","alt","rel","href","submitStatus","jumpId","courseName","allFormData","dataToService","current","hashHistory","pathname","query","getUrlToken","name","str","RegExp","r","substr","match","decodeURIComponent","Success","location","search","history","createHashHistory","StrictMode","path","exact","to","component"],"mappings":"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","file":"static/js/main.6d1043ba.chunk.js","sourcesContent":["/**\r\n * 发布订阅\r\n */\r\n\r\nclass EventEmitter {\r\n    constructor() {\r\n        this.listeners = {};\r\n    }\r\n\r\n    on(type, cb, mode) {\r\n        let cbs = this.listeners[type];\r\n        if (!cbs) {\r\n            cbs = [];\r\n        }\r\n        cbs.push(cb);\r\n        this.listeners[type] = cbs;\r\n        return () => {\r\n            this.remove(type, cb);\r\n        };\r\n    }\r\n\r\n    emit(type, ...args) {\r\n        // console.log(\r\n        //     `%c event ${type} be triggered`,\r\n        //     'color:rgb(20,150,250);font-size:14px',\r\n        // );\r\n        const cbs = this.listeners[type];\r\n        if (Array.isArray(cbs)) {\r\n            for (let i = 0; i < cbs.length; i++) {\r\n                const cb = cbs[i];\r\n                if (typeof cb === 'function') {\r\n                    cb(...args);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    remove(type, cb) {\r\n        if (cb) {\r\n            let cbs = this.listeners[type];\r\n            cbs = cbs.filter(eMap => eMap.cb !== cb);\r\n            this.listeners[type] = cbs;\r\n        } else {\r\n            this.listeners[type] = null;\r\n            delete this.listeners[type];\r\n        }\r\n    }\r\n}\r\n\r\nexport default new EventEmitter();","const wait = (time) => {\r\n    new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve()\r\n        }, time)\r\n    })\r\n}\r\n\r\nexport default wait","import React, { useEffect } from 'react'\r\nimport './index.less'\r\n\r\nconst Picker = (props) => {\r\n\r\n    const { pickerData = [], fieldValue = {}, handleSelect = (e, item) => { } } = props\r\n\r\n    useEffect(() => {\r\n        const contentPicker = document.getElementsByClassName('contentPicker')[0]\r\n        contentPicker.style.transform = 'translateY(0px)'\r\n    }, [])\r\n\r\n    return (\r\n        <div\r\n            className=\"containerPicker\"\r\n            onClick={(e) => { handleSelect(e, ''); e.stopPropagation(); e.preventDefault(); return false }}\r\n        >\r\n            <div className=\"contentPicker\">\r\n                <div className=\"pickerContent\">\r\n                    {\r\n                        pickerData.map(item =>\r\n                            <button\r\n                                key={`option_${item.id}`}\r\n                                className={item.id === fieldValue.id ? \"checked\" : ''}\r\n                                onClick={(e) => { handleSelect(e, item); e.stopPropagation(); e.preventDefault(); return false }}\r\n                            >\r\n                                {item.value}\r\n                            </button>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"divider\"></div>\r\n                <button className=\"cancelBtn\">取消</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Picker","import React, { useEffect, useImperativeHandle, useState } from 'react'\r\nimport eventEmitter from '@/utils/eventEmitter'\r\nimport wait from '@/utils/wait'\r\nimport Picker from '@/components/Picker/index'\r\nimport './index.less'\r\n\r\nconst InputBox = React.forwardRef((props, ref) => {\r\n\r\n    const { fieldId, required = false, label = '', placeHolder = '请选择', placeHolder2 = '请输入', type = 'text', maxLength = 32, picker = false, hasButton = false, pickerData = [], use = [] } = props\r\n\r\n    const [showPicker, setShowPicker] = useState(false)   // 管理弹窗状态\r\n    const [fieldValue, setFieldValue] = useState('')    // 以及输入数据\r\n    const [secondFieldValue, setSecondFieldValue] = useState('')    // 二级输入数据\r\n    const [error, setError] = useState(false)   // 校验失败提示文字\r\n    const [btnText, setBtnText] = useState('获取验证码')    // 获取验证码按钮文字\r\n    const [validationPhone, setValidationPhone] = useState(false)   // 手机号是否验证通过\r\n    const [newPlaceHolder, setNewPlaceHolder] = useState('')    // 二级输入placeholder\r\n\r\n    // 组件初始化\r\n    useEffect(() => {\r\n        if (fieldId === 'contactVerif') {   // 手机与验证码绑定\r\n            eventEmitter.on('validationPhone', (val) => {\r\n                setValidationPhone(val)\r\n            })\r\n        }\r\n        return () => {\r\n            eventEmitter.remove('validationPhone')\r\n        }\r\n    }, [fieldId])\r\n\r\n    // picker弹窗开启与关闭事件\r\n    const handlePickerOpenAndClose = (e, item = { ...fieldValue }) => {\r\n        if (!picker) return\r\n        // console.log('handlePickerOpenAndClose', item);\r\n        setShowPicker(!showPicker)\r\n        if (item.value) handleBlur(e, item)\r\n        // 弹窗时屏蔽滚动\r\n        const rootHtml = document.documentElement\r\n        if (!showPicker) {\r\n            rootHtml.style.overflow = 'hidden'\r\n        } else {\r\n            rootHtml.style.overflow = ''\r\n        }\r\n    }\r\n\r\n    // 弹窗数据选择事件\r\n    const handleSelect = async (e, item) => {\r\n        // console.log('handleSelect', item)\r\n        setSecondFieldValue('')\r\n        setFieldValue(item)  // 回填数据\r\n        if (fieldId === 'contactGetWay') {    // 特判获取途径\r\n            setNewPlaceHolder(`${item.placeHolder}${!item.required ? '（非必填）' : ''}`)\r\n        }\r\n        handlePickerOpenAndClose(e, item)\r\n\r\n        if (item.other && item.value) {    // 有二级输入框则聚焦\r\n            await wait(0)   // 阻塞当前线程，等待虚拟dom中的二级输入元素被映射到真实dom中，以便二级输入获得焦点\r\n            const secondInputNode = document.getElementsByClassName(`otherInput_${fieldId}`)[0]\r\n            secondInputNode && secondInputNode.focus()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 单个校验\r\n     * @param {object[]} use 校验规则\r\n     * @param {string} value 校验值\r\n     */\r\n    const handleTest = (use, value) => {\r\n        for (let i = 0; i < use.length; i++) {\r\n            if (use[i].reg) {   // 正则\r\n                if (!use[i].reg.test(value)) {\r\n                    console.log(use[i].msg);\r\n                    setError(use[i].msg)\r\n                    return\r\n                }\r\n            } else {    // 函数\r\n                setError(use[i](value))\r\n            }\r\n        }\r\n    }\r\n\r\n    // onBlur事件，字段校验\r\n    const handleBlur = async (e, item = { ...fieldValue }) => {\r\n\r\n        // console.log('handleBlur', item);\r\n\r\n        // 二级输入\r\n        if (item.other) {\r\n            console.log(2);\r\n            if (!secondFieldValue) {\r\n                if (!item.required) return\r\n                setError('不能为空')\r\n            } else {\r\n                handleTest(use, secondFieldValue)\r\n            }\r\n            return\r\n        }\r\n\r\n        // 一级输入\r\n        if (!item.value) {\r\n            console.log(1);\r\n            if (!required) return\r\n            setError('不能为空')\r\n            return\r\n        }\r\n        console.log(0);\r\n\r\n        handleTest(use, item.value)\r\n        setFieldValue(item)\r\n    }\r\n\r\n    // input受控组件数据变动监听\r\n    const handleInputChange = (e, second = false) => {\r\n        // console.log('handleInputChange');\r\n        const value = e && e.target && e.target.value\r\n        if (second) {\r\n            setSecondFieldValue(value)\r\n        } else {\r\n            setFieldValue({ ...fieldValue, value })\r\n        }\r\n        // 手机号实时校验\r\n        if (fieldId === 'contactPhone') {\r\n            let flag = true\r\n            if (value.length === 11) {\r\n                for (let i = 0; flag && i < use.length; i++) {\r\n                    if (!use[i].reg.test(value)) {\r\n                        setError(use[i].msg)\r\n                        flag = false\r\n                    }\r\n                }\r\n            } else {\r\n                flag = false\r\n            }\r\n            eventEmitter.emit('validationPhone', flag)\r\n        }\r\n    }\r\n\r\n    // 提交按钮校验所有字段\r\n    const handleClickValidationBtn = async () => {\r\n        if (!validationPhone) return    // 若手机号未校验成功则不做处理\r\n        console.log('handleClickValidationBtn')\r\n        setValidationPhone(false)\r\n        let time = 10\r\n        setBtnText(<i className=\"loading\"></i>)\r\n        await wait(5000)\r\n        const timer = setInterval(() => {\r\n            setBtnText(`${time--}s后重新获取`)\r\n            if (time < -1) {\r\n                clearInterval(timer)\r\n                setValidationPhone(true)\r\n                setBtnText('获取验证码')\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    // 将ref数据暴露给父组件\r\n    useImperativeHandle(ref, () => ({\r\n        ...props,\r\n        changeErrorMsg: (newVal) => {\r\n            setError(newVal)\r\n        },\r\n        data: {details: {}, value2: secondFieldValue, value1: fieldValue}\r\n    }))\r\n\r\n    return (\r\n        <div id={`id_${fieldId}`} className=\"containerInputBox\">\r\n            <font className={required ? \"starRed\" : \"starOpacity\"}>*</font>\r\n            <span className=\"label\">{label}</span>\r\n            {/* 一级输入框 */}\r\n            <input\r\n                onClick={() => { handlePickerOpenAndClose(); setError('') }}\r\n                className=\"input\"\r\n                type={type}\r\n                readOnly={picker}   // 为picker的input只可读\r\n                placeholder={placeHolder}\r\n                maxLength={maxLength}\r\n                onChange={handleInputChange}    // 受控组件\r\n                onFocus={() => { setError('') }}\r\n                onBlur={!picker ? handleBlur : null}\r\n                value={(fieldValue && fieldValue.value) || ''}\r\n                ref={!(fieldValue && fieldValue.other) ? ref : null}\r\n            />\r\n            {/* 错误提示 */}\r\n            {\r\n                error && <div className=\"errorInfo\">{error}</div>\r\n            }\r\n            {/* 二级输入框 */}\r\n            {\r\n                (fieldValue && fieldValue.other) &&\r\n                <div className=\"otherBox\">\r\n                    <input\r\n                        className={`otherInput otherInput_${fieldId}`}\r\n                        type=\"text\"\r\n                        maxLength={maxLength}\r\n                        placeholder={newPlaceHolder || placeHolder2}\r\n                        ref={ref}\r\n                        onBlur={handleBlur}\r\n                        value={secondFieldValue || ''}\r\n                        onChange={(e) => { handleInputChange(e, true) }}\r\n                        onFocus={() => { setError('') }}\r\n                    />\r\n                </div>\r\n            }\r\n            {/* 获取验证码按钮 */}\r\n            {\r\n                hasButton &&\r\n                <button\r\n                    className={(validationPhone && btnText === '获取验证码') ? \"validationBtn validationAble\" : \"validationBtn validationUnable\"}\r\n                    onClick={handleClickValidationBtn}\r\n                >\r\n                    {btnText}\r\n                </button>\r\n            }\r\n            {/* 右侧picker箭头 */}\r\n            {\r\n                picker && <i className=\"arrow\"></i>\r\n            }\r\n            {/* picker弹窗 */}\r\n            {\r\n                picker && showPicker &&\r\n                <Picker\r\n                    pickerData={pickerData}\r\n                    fieldValue={fieldValue}\r\n                    handleSelect={handleSelect}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default InputBox","import React from 'react'\r\nimport './toast.less'\r\n\r\nconst Toast = (props) => {\r\n    const { show, msg } = props;\r\n    return (\r\n        <div>\r\n            {show ? (\r\n                <div className=\"toastBox\">\r\n                    <span className=\"toastMsg\">{msg}</span>\r\n                </div>\r\n            ) : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toast","import React, { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Toast from './toast';\r\n\r\nconst Notice = (msg, duration = 3000) => {\r\n    useEffect(() => {\r\n        const span = document.createElement('span')\r\n        document.body.appendChild(span)\r\n        if (!document.getElementsByClassName('toastBox')[0]) {\r\n            let timer = setTimeout(() => {\r\n                clearTimeout(timer);\r\n                document.body.removeChild(span)\r\n            }, duration)\r\n            return ReactDOM.render(<Toast show={true} msg={msg} />, span)\r\n        }\r\n    }, [duration, msg])\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    info(msg, duration) {\r\n        return Notice(msg, duration)\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bannerImg.881f5bff.png\";","const validation = (use = [], value = '') => {\r\n    if (value === '') {\r\n        return '不能为空'\r\n    }\r\n    let flag = true\r\n    let errorMsg = ''\r\n    use.forEach(item => {\r\n        if (item.reg) {\r\n            if (flag && !item.reg.test(value)) {\r\n                flag = false\r\n                errorMsg = item.msg\r\n            }\r\n        } else {\r\n            if (!errorMsg) {\r\n                errorMsg = item(value)\r\n            }\r\n        }\r\n    })\r\n    return errorMsg\r\n}\r\n\r\nexport default validation","import React from 'react'\r\n\r\n// 请勿输入纯数字、纯字母、空格及除_以外的特殊字符\r\nconst baseInputCheck = (val) => {\r\n    // console.log(val);\r\n    const reg = /[`~!@#$^&*()=|{}':;',\\\\[\\\\].<>《》?~！@#￥……&*（）——|{}【】‘；：”“'。，、？]/\r\n    const reg2 = /^[0-9]*$/\r\n    const reg3 = /^[a-z]+$/i\r\n    if (reg.test(val) || reg2.test(val) || reg3.test(val) || val.indexOf(' ') >= 0) {\r\n        return '请勿输入纯数字、纯字母、空格及除_以外的特殊字符'\r\n    }\r\n    return ''\r\n}\r\n\r\nconst remindBaseData = [{\r\n        fieldId: 'baseCourseName',\r\n        required: true,\r\n        label: '报名课程',\r\n        placeHolder: '请选择课程进行报名',\r\n        picker: true,\r\n        ref: React.createRef(),\r\n        pickerData: [{\r\n                id: 1,\r\n                value: '视觉设计全能班',\r\n                other: false\r\n            },\r\n            {\r\n                id: 2,\r\n                value: '插画设计',\r\n                other: false\r\n            },\r\n            {\r\n                id: 3,\r\n                value: '交互设计',\r\n                other: false\r\n            },\r\n            {\r\n                id: 4,\r\n                value: 'PHP开发',\r\n                other: false\r\n            },\r\n            {\r\n                id: 5,\r\n                value: '安卓开发',\r\n                other: false\r\n            },\r\n            {\r\n                id: 6,\r\n                value: 'H5游戏开发',\r\n                other: false\r\n            },\r\n            {\r\n                id: 7,\r\n                value: '前端开发',\r\n                other: false\r\n            }\r\n        ],\r\n        use: [baseInputCheck]\r\n    },\r\n    {\r\n        fieldId: 'baseClassDate',\r\n        required: true,\r\n        label: '上课时间',\r\n        placeHolder: '请选择上课时间',\r\n        picker: true,\r\n        ref: React.createRef(),\r\n        pickerData: [{\r\n                id: 1,\r\n                value: '周一至周天都可以',\r\n                other: false\r\n            },\r\n            {\r\n                id: 2,\r\n                value: '仅周一至周五有空上课',\r\n                other: false\r\n            },\r\n            {\r\n                id: 3,\r\n                value: '仅周六周天有空上课',\r\n                other: false\r\n            }\r\n        ],\r\n        use: [baseInputCheck]\r\n    }\r\n]\r\n\r\nconst remindUserInfoData = [{\r\n        fieldId: 'infoName',\r\n        required: true,\r\n        label: '姓名',\r\n        maxLength: 8,\r\n        placeHolder: '请输入您的姓名',\r\n        picker: false,\r\n        ref: React.createRef(),\r\n        use: [{\r\n            reg: /[\\u4e00-\\u9fa5]{2,8}/,\r\n            msg: '姓名为2-8字中文'\r\n        }, (val) => {\r\n            if (val.length > 8) {\r\n                return '姓名为2-8字中文'\r\n            }\r\n            return ''\r\n        }]\r\n    },\r\n    {\r\n        fieldId: 'infoSex',\r\n        required: true,\r\n        label: '性别',\r\n        placeHolder: '请选择您的性别',\r\n        picker: true,\r\n        ref: React.createRef(),\r\n        pickerData: [{\r\n                id: 1,\r\n                value: '男',\r\n                other: false\r\n            },\r\n            {\r\n                id: 2,\r\n                value: '女',\r\n                other: false\r\n            }\r\n        ],\r\n        use: [{\r\n            reg: /[男|女]/,\r\n            msg: '性别错误'\r\n        }]\r\n    },\r\n    {\r\n        fieldId: 'infoSchool',\r\n        required: true,\r\n        label: '学校',\r\n        placeHolder: '请选择您的学校',\r\n        placeHolder2: '请输入您的学校',\r\n        picker: true,\r\n        ref: React.createRef(),\r\n        pickerData: [{\r\n                id: 1,\r\n                value: '厦门大学',\r\n                other: false\r\n            },\r\n            {\r\n                id: 2,\r\n                value: '福建师范大学',\r\n                other: false\r\n            },\r\n            {\r\n                id: 3,\r\n                value: '福州大学',\r\n                other: false\r\n            },\r\n            {\r\n                id: 4,\r\n                value: '福建农林大学',\r\n                other: false\r\n            },\r\n            {\r\n                id: 5,\r\n                value: '华侨大学',\r\n                other: false\r\n            },\r\n            {\r\n                id: 6,\r\n                value: '集美大学',\r\n                other: false\r\n            },\r\n            {\r\n                id: 7,\r\n                value: '福建医科大学',\r\n                other: false\r\n            },\r\n            {\r\n                id: 8,\r\n                value: '福建中医药大学',\r\n                other: false\r\n            },\r\n            {\r\n                id: 9,\r\n                value: '福建工程学院',\r\n                other: false\r\n            },\r\n            {\r\n                id: 0,\r\n                value: '其他',\r\n                required: true,\r\n                other: true\r\n            }\r\n        ],\r\n        use: [baseInputCheck]\r\n    },\r\n    {\r\n        fieldId: 'infoMajor',\r\n        required: true,\r\n        label: '专业',\r\n        maxLength: 15,\r\n        placeHolder: '请输入您的专业',\r\n        picker: false,\r\n        ref: React.createRef(),\r\n        use: [baseInputCheck]\r\n    },\r\n    {\r\n        fieldId: 'infoGrade',\r\n        required: true,\r\n        label: '年级',\r\n        placeHolder: '请选择您的年级',\r\n        placeHolder2: '请输入您的年级',\r\n        picker: true,\r\n        ref: React.createRef(),\r\n        pickerData: [{\r\n                id: 1,\r\n                value: '大一',\r\n                other: false\r\n            },\r\n            {\r\n                id: 2,\r\n                value: '大二',\r\n                other: false\r\n            },\r\n            {\r\n                id: 3,\r\n                value: '大三',\r\n                other: false\r\n            },\r\n            {\r\n                id: 4,\r\n                value: '大四',\r\n                other: false\r\n            },\r\n            {\r\n                id: 5,\r\n                value: '已毕业',\r\n                other: false\r\n            },\r\n            {\r\n                id: 0,\r\n                value: '其他',\r\n                required: true,\r\n                other: true\r\n            }\r\n        ],\r\n        use: [baseInputCheck]\r\n    }\r\n]\r\n\r\nconst remindUserContactData = [{\r\n        fieldId: 'contactPhone',\r\n        required: true,\r\n        label: '手机',\r\n        maxLength: 11,\r\n        type: 'number',\r\n        placeHolder: '请输入手机号码',\r\n        picker: false,\r\n        ref: React.createRef(),\r\n        use: [{\r\n            reg: /^1(?:3\\d|4[4-9]|5[0-35-9]|6[67]|7[013-8]|8\\d|9\\d)\\d{8}$/,\r\n            msg: '手机号格式错误'\r\n        }]\r\n    },\r\n    {\r\n        fieldId: 'contactVerif',\r\n        required: true,\r\n        label: '验证码',\r\n        placeHolder: '请输入短信验证码',\r\n        picker: false,\r\n        ref: React.createRef(),\r\n        hasButton: true,\r\n        use: [{\r\n            reg: /[0-9a-zA-Z]/i,\r\n            msg: '短信验证码格式错误'\r\n        }]\r\n    },\r\n    {\r\n        fieldId: 'contactEmail',\r\n        required: true,\r\n        label: '邮箱',\r\n        type: 'email',\r\n        placeHolder: '请输入您的邮箱号',\r\n        picker: false,\r\n        ref: React.createRef(),\r\n        use: [{\r\n            reg: /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/,\r\n            msg: '邮箱号格式错误'\r\n        }]\r\n    },\r\n    {\r\n        fieldId: 'contactWeChat',\r\n        required: false,\r\n        label: '微信',\r\n        maxLength: 20,\r\n        placeHolder: '请输入您的微信号',\r\n        picker: false,\r\n        ref: React.createRef(),\r\n        use: [{\r\n            reg: /^[a-zA-Z][a-zA-Z\\d_-]{5,19}$/,\r\n            msg: '微信号格式错误'\r\n        }]\r\n    },\r\n    {\r\n        fieldId: 'contactGetWay',\r\n        required: true,\r\n        label: '获取途径',\r\n        placeHolder: '请选择获取途径',\r\n        placeHolder2: '请填写获取途径',\r\n        picker: true,\r\n        ref: React.createRef(),\r\n        pickerData: [{\r\n                id: 1,\r\n                value: '同学推荐',\r\n                placeHolder: '请填写同学姓名',\r\n                other: true\r\n            },\r\n            {\r\n                id: 2,\r\n                value: '高校老师推荐',\r\n                placeHolder: '请填写老师姓名',\r\n                other: true\r\n            },\r\n            {\r\n                id: 3,\r\n                value: '朋友推荐',\r\n                placeHolder: '请填写朋友姓名',\r\n                other: true\r\n            },\r\n            {\r\n                id: 0,\r\n                value: '其他',\r\n                required: true,\r\n                placeHolder: '请填写获取途径',\r\n                other: true\r\n            }\r\n        ],\r\n        use: [baseInputCheck]\r\n    }\r\n]\r\n\r\nexport {\r\n    remindBaseData,\r\n    remindUserContactData,\r\n    remindUserInfoData\r\n}","const scrollToAnchor = (anchorName) => {\r\n    if (anchorName) {\r\n        // 找到锚点\r\n        let anchorElement = document.getElementById(anchorName);\r\n        // 如果对应id的锚点存在，就跳转到锚点\r\n        if (anchorElement) { anchorElement.scrollIntoView({ block: 'start', behavior: 'smooth' }); }\r\n    }\r\n}\r\n\r\nexport default scrollToAnchor","import React, { useState } from 'react'\r\nimport { hashHistory } from 'react-router'\r\nimport InputBox from '@/components/InputBox/index'\r\n// import Toast from '@/components/Toast/index'\r\nimport Toast from \"@/components/Toast/index\"\r\nimport bannerImg from '@/assets/main/bannerImg.png'\r\nimport validation from '@/utils/validation'\r\nimport './index.less'\r\n\r\nimport { remindBaseData, remindUserInfoData, remindUserContactData } from '../../mock/data'\r\nimport scrollToAnchor from '../../utils/scrollToAnchor'\r\n\r\nconst Main = () => {\r\n\r\n    const [checked, setChecked] = useState(false)   // 协议按钮状态\r\n\r\n    const handleSubmit = () => {\r\n        console.log('提交')\r\n        let submitStatus = true // 所有字段校验状态true:全校验成功,false:存在失败\r\n        let jumpId = ''\r\n        let courseName = ''\r\n        const allFormData = []\r\n        const dataToService = []\r\n        remindBaseData.forEach(item => {\r\n            allFormData.push({ fieldId: item.fieldId || '', use: item.use || [], data: item.ref.current.data || '', ref: item.ref })\r\n        })\r\n        remindUserInfoData.forEach(item => {\r\n            allFormData.push({ fieldId: item.fieldId || '', use: item.use || [], data: item.ref.current.data || '', ref: item.ref })\r\n        })\r\n        remindUserContactData.forEach(item => {\r\n            allFormData.push({ fieldId: item.fieldId || '', use: item.use || [], data: item.ref.current.data || '', ref: item.ref })\r\n        })\r\n        console.log(allFormData)\r\n        allFormData.forEach(item => {\r\n            let msg = ''\r\n            const val = item.data.value1.other ? item.data.value2 : item.data.value1.value\r\n            console.log(val);\r\n            // 校验数据为空\r\n            if (!val) {\r\n                if (item.ref.current.required) {    // 必填\r\n                    msg = validation(item.use, val)\r\n                    // 二级框非必填\r\n                    if (item.data.value1 && !item.data.value1.required) msg = ''\r\n                }\r\n            }\r\n            item.ref.current.changeErrorMsg(msg)    // 调用子元素函数，更改其error值\r\n            if (msg) {  // 若存在错误则提交失败并跳转到第一个错误的地方\r\n                if (!jumpId) jumpId = `id_${item.fieldId}`\r\n                submitStatus = false\r\n            }\r\n            if (item.fieldId === 'baseCourseName') courseName = item.data.value1.value  // 保存课程名称，传递到success页面\r\n            dataToService.push({ fieldId: item.fieldId, value: item.data.value1.other ? `${item.data.value1.value}:${item.data.value2}` : item.data.value1.value })\r\n        })\r\n\r\n        if (submitStatus && !checked) { // 校验通过但未勾选\r\n            submitStatus = false\r\n            Toast.info(\"请阅读并勾选《服务协议》和《隐私政策》\")\r\n            // console.log('请阅读并勾选《服务协议》和《隐私政策》')\r\n        }\r\n\r\n        if (submitStatus) { // 成功\r\n            console.log('success')\r\n            hashHistory.push({ pathname: '/success', query: { courseName } })\r\n            console.log('dataToService: ', dataToService);\r\n        } else {    // 失败\r\n            console.log('fail')\r\n            scrollToAnchor(jumpId)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"containerMain\">\r\n            <img className=\"banner\" src={bannerImg} alt=\"banner\" />\r\n            <div className=\"content\">\r\n                <div className=\"formRequire\">\r\n                    <span className=\"formTitle\">\r\n                        线下课程报名\r\n                    <span className=\"formSubTitle\">\r\n                            (<font>*</font>必填项)\r\n                    </span>\r\n                    </span>\r\n                </div>\r\n                <div className=\"remindBox\">\r\n                    <div className=\"remind\">\r\n                        <p className=\"textLine1\">每一期只能报名一个线下课程哦</p>\r\n                        <p className=\"textLine\">上课时间：每周1-3次课，一次半天，共计16周</p>\r\n                        <p className=\"textLine\">上课地点：厦门市思明区软件园二期望海路2号 4399大厦</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"inputBox firstInputBox\">\r\n                    {\r\n                        remindBaseData.map(item => <InputBox key={`inputBox_${item.fieldId}`} {...item} />)\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"inputBox\">\r\n                    {\r\n                        remindUserInfoData.map(item => <InputBox key={`inputBox_${item.fieldId}`} {...item} />)\r\n                    }\r\n                </div>\r\n                <div className=\"inputBox\">\r\n                    <div className=\"autoRegistPromptBox\">\r\n                        <div className=\"autoRegistPrompt\">\r\n                            <span className=\"promptMsg\">未注册，输入手机号将自动注册</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {\r\n                        remindUserContactData.map(item => <InputBox key={`inputBox_${item.fieldId}`} {...item} />)\r\n                    }\r\n                </div>\r\n            </div>\r\n            <footer className=\"footer\">\r\n                <div className=\"agreementCheck\">\r\n                    <button className=\"agreement\" onClick={() => { setChecked(!checked) }}>\r\n                        <i className={checked ? \"icon iconChecked\" : 'icon iconCheck'}></i>\r\n                    </button>\r\n                    <span className=\"declare\">\r\n                        报名线下课程即视为同意\r\n                        <a target='_blank' rel=\"noreferrer\" href=\"https://m.4399ke.com//?ac=userRule\">《4399云课堂用户服务协议》</a>\r\n                        和\r\n                        <a target='block' rel=\"noreferrer\" href=\"https://www.4399ke.com//?ac=privacy\">《隐私政策》</a>\r\n                    </span>\r\n                </div>\r\n                <button className=\"submitBtn\" onClick={handleSubmit}>提交</button>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main","const getUrlToken = (name, str) => {\r\n  const reg = new RegExp(`(^|&)${name}=([^&]*)(&|$)`);\r\n  const r = str.substr(1).match(reg);\r\n  if (r != null) return decodeURIComponent(r[2]);\r\n  return null;\r\n}\r\n\r\nexport default getUrlToken","import getUrlToken from '@/utils/getUrlToken'\r\nimport './index.less'\r\n\r\nconst Success = (props) => {\r\n\r\n    const courseName = getUrlToken('courseName', props.location.search)\r\n\r\n    return (\r\n        <div className=\"containerSuccess\">\r\n            <header className=\"header\"></header>\r\n            <div className=\"content\">\r\n                <div className=\"successIcon\"><i className=\"tick\"></i></div>\r\n                <div className=\"successMsg\">您已成功报名【{courseName || '错误课程名称'}】</div>\r\n                <div className=\"attention\">敬请等待平台人员通知，请留意手机、邮箱哦~ 可关注微信公众号，联系客服</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Success","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.less';\r\nimport Main from './pages/main/index.jsx';\r\nimport Success from './pages/success/index.jsx'\r\nimport {Router,Route,Switch,Redirect} from 'react-router-dom';\r\nimport { createHashHistory } from \"history\";\r\n\r\nconst history = createHashHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route path='/' exact render={()=>(\r\n          <Redirect to='/main'/>\r\n        )}/>\r\n        <Route path='/main' component={Main}/>\r\n        <Route path='/success' component={Success}/>\r\n      </Switch>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}